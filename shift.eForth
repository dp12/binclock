( SPI Matrix Shifting on Arduino )
( by dp12 on 08/11/14            )
( SHREG1: blue                   )
( SHREG2: red                    )
( SHREG3: green                  )
( SHREG4: GND                    )
4c constant spcr
4d constant spsr
4e constant spdr
24 constant ddrb
25 constant portb

: lshift    ( num row -- num << row )
    for aft 2* then next ;

: train_spi    ( -- )
    ( set direction and spi registers )
    2c ddrb c@ or ddrb c!    \ set mosi|sck|ss outputs, clr miso input
    d3 portb c@ and portb c! \ set mosi|sck|ss to low
    50 spcr c!               \ spi master, enable spi, prescalar=fosc/2
    1 spsr c@ or spsr c!     \ set spi 2x speed
    spdr c@ drop ;           \ read spdr to clear it

: >spi    ( b -- )
    ( send byte over spi )
    spdr c!                      \ tx byte
    begin spsr c@ 80 and until ; \ wait for spif

: slave_    ( -- )
    ( lower slave select )
    fb portb c@ and portb c! ;

: slave^    ( -- )
    ( raise slave select )
    4 portb c@ or portb c! ;

: dark    ( -- )
    ( turn off lights )
    slave_             \ assert ssel
    0 >spi             \ turn off rows
    2 for ff >spi next \ turn off rgb
    slave^ ;           \ deassert ssel

create cross
    ( make cross with rgb )
    aa11 , bb22 , cc33 , dd44 ,
    ee55 , ff66 , aa77 , bb88 ,
    cc99 , dd00 , ee11 , ff22 ,

: odd    ( odd# -- 1 )
    1 and 1 = ; \ check if first bit is 1

: >row    ( addr row -- )
    ( send row for a RGB color )
    dup odd if   + 1- c@ \ row is in lower byte
            else + 1+ c@ \ row is in upper byte
            then >spi ;  \ send row via spi

: scan    ( addr -- addr )
    ( iterate thru 8 rows of rgb )
    7 for
        slave_
        1 r@ lshift  >spi \ light up row n
        dup r@       >row \ send green
        dup 8 + r@   >row \ send red
        dup 10 + r@  >row \ send blue
        slave^
    next ;

: cycle    ( addr n -- )
    ( scan thru rows n+1 times )
    for scan next dark drop ;
